# Generated by Django 4.2.23 on 2025-06-16 18:36

from django.db import migrations, models
import django.db.models.deletion


def create_projects_from_existing_data(apps, schema_editor):
    """
    Cria projetos únicos baseado nos project_name existentes
    """
    ProjectEnrollment = apps.get_model('projects', 'ProjectEnrollment')
    Project = apps.get_model('projects', 'Project')
    
    # Pega todos os nomes únicos de projetos
    existing_project_names = ProjectEnrollment.objects.values_list('project_name', flat=True).distinct()
    
    for project_name in existing_project_names:
        if project_name:  # Se não for None ou vazio
            Project.objects.get_or_create(
                name=project_name,
                defaults={'description': f'Projeto migrado: {project_name}'}
            )


def populate_project_fk(apps, schema_editor):
    """
    Popula o campo project (FK) baseado no project_name
    """
    ProjectEnrollment = apps.get_model('projects', 'ProjectEnrollment')
    Project = apps.get_model('projects', 'Project')
    
    for enrollment in ProjectEnrollment.objects.all():
        if enrollment.project_name:
            try:
                project = Project.objects.get(name=enrollment.project_name)
                enrollment.project = project
                enrollment.save()
            except Project.DoesNotExist:
                # Se por algum motivo o projeto não existe, cria um
                project = Project.objects.create(
                    name=enrollment.project_name,
                    description=f'Projeto criado automaticamente: {enrollment.project_name}'
                )
                enrollment.project = project
                enrollment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_auto_20250616_1535'),
    ]

    operations = [
        # 1. Criar o modelo Project
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome do Projeto')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'ordering': ['name'],
            },
        ),
        
        # 2. Adicionar campo project (FK) como nullable temporariamente
        migrations.AddField(
            model_name='projectenrollment',
            name='project',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='projects.project', verbose_name='Projeto'),
        ),
        
        # 3. Criar projetos baseado nos dados existentes
        migrations.RunPython(create_projects_from_existing_data, migrations.RunPython.noop),
        
        # 4. Popular o campo project FK
        migrations.RunPython(populate_project_fk, migrations.RunPython.noop),
        
        # 5. Tornar o campo project obrigatório
        migrations.AlterField(
            model_name='projectenrollment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='projects.project', verbose_name='Projeto'),
        ),
        
        # 6. Remover o campo project_name antigo
        migrations.RemoveField(
            model_name='projectenrollment',
            name='project_name',
        ),
        
        # 7. Atualizar ordenação
        migrations.AlterModelOptions(
            name='projectenrollment',
            options={'ordering': ['project__name', 'weekday', 'start_time'], 'verbose_name': 'Matrícula em Projeto', 'verbose_name_plural': 'Matrículas em Projetos'},
        ),
    ]
