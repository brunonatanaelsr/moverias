#!/bin/bash
"""
CONFIGURA√á√ÉO DE CRON JOBS - SISTEMA DE NOTIFICA√á√ïES MOVE MARIAS
Script para automatizar as notifica√ß√µes do sistema
"""
# Script de configura√ß√£o de cron jobs para notifica√ß√µes autom√°ticas

# Definir vari√°veis
MOVE_PATH="/workspaces/move"
PYTHON_PATH="python3"
SCRIPT_PATH="$MOVE_PATH/automated_notifications.py"

echo "=========================================="
echo "üîß CONFIGURADOR DE CRON JOBS - MOVE MARIAS"
echo "=========================================="

# Verificar se o script existe
if [ ! -f "$SCRIPT_PATH" ]; then
    echo "‚ùå Erro: Script de notifica√ß√µes n√£o encontrado em $SCRIPT_PATH"
    exit 1
fi

echo "‚úÖ Script de notifica√ß√µes encontrado"

# Criar diret√≥rio de logs se n√£o existir
LOG_DIR="$MOVE_PATH/logs"
mkdir -p "$LOG_DIR"

echo "‚úÖ Diret√≥rio de logs criado: $LOG_DIR"

# Backup do crontab atual
echo "üíæ Fazendo backup do crontab atual..."
crontab -l > "$MOVE_PATH/crontab_backup_$(date +%Y%m%d_%H%M%S).txt" 2>/dev/null || echo "‚ö†Ô∏è  Nenhum crontab existente"

# Cron jobs recomendados
echo "üìã Configurando cron jobs..."

# Criar arquivo tempor√°rio com novos cron jobs
TEMP_CRON=$(mktemp)

# Preservar cron jobs existentes (se houver)
crontab -l 2>/dev/null | grep -v "# Move Marias Notifications" >> "$TEMP_CRON" || true

# Adicionar novos cron jobs
cat >> "$TEMP_CRON" << EOF

# Move Marias Notifications - Auto-generated
# Notifica√ß√µes di√°rias √†s 8h
0 8 * * * cd $MOVE_PATH && $PYTHON_PATH $SCRIPT_PATH --frequency daily >> $LOG_DIR/notifications_daily.log 2>&1

# Notifica√ß√µes semanais √†s segundas-feiras √†s 9h
0 9 * * 1 cd $MOVE_PATH && $PYTHON_PATH $SCRIPT_PATH --frequency weekly >> $LOG_DIR/notifications_weekly.log 2>&1

# Notifica√ß√µes mensais no primeiro dia do m√™s √†s 10h
0 10 1 * * cd $MOVE_PATH && $PYTHON_PATH $SCRIPT_PATH --frequency monthly >> $LOG_DIR/notifications_monthly.log 2>&1

# Limpeza de logs antigos (executar semanalmente)
0 2 * * 0 find $LOG_DIR -name "*.log" -mtime +30 -delete

EOF

# Instalar novo crontab
crontab "$TEMP_CRON"
rm "$TEMP_CRON"

echo "‚úÖ Cron jobs configurados com sucesso!"

# Mostrar cron jobs ativos
echo ""
echo "üìÖ CRON JOBS ATIVOS:"
echo "===================="
crontab -l | grep -A 10 "Move Marias Notifications"

echo ""
echo "üìä CRONOGRAMA DE EXECU√á√ÉO:"
echo "=========================="
echo "‚Ä¢ Notifica√ß√µes Di√°rias:  Todos os dias √†s 8:00"
echo "‚Ä¢ Notifica√ß√µes Semanais: Segundas-feiras √†s 9:00"
echo "‚Ä¢ Notifica√ß√µes Mensais:  Primeiro dia do m√™s √†s 10:00"
echo "‚Ä¢ Limpeza de Logs:       Domingos √†s 2:00"

echo ""
echo "üìÅ LOGS SALVOS EM:"
echo "=================="
echo "‚Ä¢ Di√°rias:  $LOG_DIR/notifications_daily.log"
echo "‚Ä¢ Semanais: $LOG_DIR/notifications_weekly.log"
echo "‚Ä¢ Mensais:  $LOG_DIR/notifications_monthly.log"

echo ""
echo "üîß COMANDOS √öTEIS:"
echo "=================="
echo "‚Ä¢ Ver cron jobs:        crontab -l"
echo "‚Ä¢ Editar cron jobs:     crontab -e"
echo "‚Ä¢ Teste manual di√°rio:  cd $MOVE_PATH && python automated_notifications.py --frequency daily"
echo "‚Ä¢ Teste completo:       cd $MOVE_PATH && python automated_notifications.py --test"

echo ""
echo "‚úÖ CONFIGURA√á√ÉO CONCLU√çDA!"
echo "=========================================="

# Teste de execu√ß√£o
echo ""
echo "üß™ EXECUTANDO TESTE DE FUNCIONAMENTO..."
cd "$MOVE_PATH"
python3 "$SCRIPT_PATH" --test --frequency daily

echo ""
echo "üéâ SISTEMA DE NOTIFICA√á√ïES AUTOM√ÅTICAS CONFIGURADO E TESTADO!"
echo "Os emails ser√£o enviados automaticamente conforme programado."
