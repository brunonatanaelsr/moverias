# Generated by Django 4.2.13 on 2025-07-15 13:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
        ('social', '0011_update_socialanamnesisevolution_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BeneficiaryActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('activity_type', models.CharField(choices=[('WORKSHOP', 'Workshop'), ('COURSE', 'Curso'), ('THERAPY', 'Terapia'), ('COUNSELING', 'Aconselhamento'), ('VOCATIONAL', 'Profissionalizante'), ('RECREATIONAL', 'Recreativa'), ('HEALTH', 'Saúde'), ('LEGAL', 'Jurídica'), ('SOCIAL', 'Social'), ('EDUCATIONAL', 'Educacional'), ('OTHER', 'Outros')], default='OTHER', max_length=20, verbose_name='Tipo de Atividade')),
                ('status', models.CharField(choices=[('PLANNED', 'Planejada'), ('ACTIVE', 'Ativa'), ('COMPLETED', 'Concluída'), ('CANCELLED', 'Cancelada'), ('PAUSED', 'Pausada')], default='PLANNED', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('LOW', 'Baixa'), ('MEDIUM', 'Média'), ('HIGH', 'Alta'), ('URGENT', 'Urgente')], default='MEDIUM', max_length=10, verbose_name='Prioridade')),
                ('start_date', models.DateField(verbose_name='Data de Início')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data de Término')),
                ('frequency', models.CharField(choices=[('UNIQUE', 'Única'), ('DAILY', 'Diária'), ('WEEKLY', 'Semanal'), ('BIWEEKLY', 'Quinzenal'), ('MONTHLY', 'Mensal'), ('QUARTERLY', 'Trimestral'), ('CUSTOM', 'Personalizada')], default='UNIQUE', max_length=20, verbose_name='Frequência')),
                ('facilitator', models.CharField(max_length=100, verbose_name='Facilitador/Responsável')),
                ('location', models.CharField(max_length=200, verbose_name='Local')),
                ('materials_needed', models.TextField(blank=True, verbose_name='Materiais Necessários')),
                ('objectives', models.TextField(verbose_name='Objetivos')),
                ('expected_outcomes', models.TextField(verbose_name='Resultados Esperados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('impact_score', models.IntegerField(default=0, help_text='Pontuação de impacto social (0-100)', verbose_name='Pontuação de Impacto')),
                ('completion_percentage', models.IntegerField(default=0, help_text='Percentual de conclusão da atividade', verbose_name='Percentual de Conclusão')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='members.beneficiary', verbose_name='Beneficiária')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
                ('social_anamnesis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='social.socialanamnesis', verbose_name='Anamnese Social')),
            ],
            options={
                'verbose_name': 'Atividade do Beneficiário',
                'verbose_name_plural': 'Atividades dos Beneficiários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivitySession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_number', models.PositiveIntegerField(verbose_name='Número da Sessão')),
                ('title', models.CharField(max_length=200, verbose_name='Título da Sessão')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('session_date', models.DateField(verbose_name='Data da Sessão')),
                ('start_time', models.TimeField(verbose_name='Horário de Início')),
                ('end_time', models.TimeField(verbose_name='Horário de Término')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Agendada'), ('IN_PROGRESS', 'Em Andamento'), ('COMPLETED', 'Concluída'), ('CANCELLED', 'Cancelada'), ('RESCHEDULED', 'Reagendada')], default='SCHEDULED', max_length=20, verbose_name='Status')),
                ('facilitator', models.CharField(max_length=100, verbose_name='Facilitador')),
                ('location', models.CharField(max_length=200, verbose_name='Local')),
                ('materials_used', models.TextField(blank=True, verbose_name='Materiais Utilizados')),
                ('content_covered', models.TextField(blank=True, verbose_name='Conteúdo Abordado')),
                ('objectives_achieved', models.TextField(blank=True, verbose_name='Objetivos Alcançados')),
                ('observations', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='activities.beneficiaryactivity', verbose_name='Atividade')),
            ],
            options={
                'verbose_name': 'Sessão da Atividade',
                'verbose_name_plural': 'Sessões das Atividades',
                'ordering': ['session_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ActivityNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('GENERAL', 'Geral'), ('PROGRESS', 'Progresso'), ('CONCERN', 'Preocupação'), ('ACHIEVEMENT', 'Conquista'), ('FOLLOW_UP', 'Acompanhamento')], default='GENERAL', max_length=20, verbose_name='Tipo de Nota')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='Confidencial')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='activities.beneficiaryactivity', verbose_name='Atividade')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nota da Atividade',
                'verbose_name_plural': 'Notas das Atividades',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 'Muito Insatisfeito'), (2, 'Insatisfeito'), (3, 'Neutro'), (4, 'Satisfeito'), (5, 'Muito Satisfeito')], default=5, verbose_name='Avaliação Geral')),
                ('content_quality', models.IntegerField(choices=[(1, 'Muito Insatisfeito'), (2, 'Insatisfeito'), (3, 'Neutro'), (4, 'Satisfeito'), (5, 'Muito Satisfeito')], default=5, verbose_name='Qualidade do Conteúdo')),
                ('facilitator_rating', models.IntegerField(choices=[(1, 'Muito Insatisfeito'), (2, 'Insatisfeito'), (3, 'Neutro'), (4, 'Satisfeito'), (5, 'Muito Satisfeito')], default=5, verbose_name='Avaliação do Facilitador')),
                ('positive_aspects', models.TextField(blank=True, verbose_name='Aspectos Positivos')),
                ('improvements_suggested', models.TextField(blank=True, verbose_name='Sugestões de Melhoria')),
                ('additional_comments', models.TextField(blank=True, verbose_name='Comentários Adicionais')),
                ('would_recommend', models.BooleanField(default=True, verbose_name='Recomendaria para outros')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_entries', to='activities.beneficiaryactivity', verbose_name='Atividade')),
            ],
            options={
                'verbose_name': 'Feedback da Atividade',
                'verbose_name_plural': 'Feedbacks das Atividades',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended', models.BooleanField(default=False, verbose_name='Presente')),
                ('arrival_time', models.TimeField(blank=True, null=True, verbose_name='Horário de Chegada')),
                ('departure_time', models.TimeField(blank=True, null=True, verbose_name='Horário de Saída')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('excuse_reason', models.TextField(blank=True, verbose_name='Motivo da Falta')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_attendances', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='activities.activitysession', verbose_name='Sessão')),
            ],
            options={
                'verbose_name': 'Presença na Atividade',
                'verbose_name_plural': 'Presenças nas Atividades',
            },
        ),
        migrations.AddIndex(
            model_name='beneficiaryactivity',
            index=models.Index(fields=['beneficiary', 'status'], name='activities__benefic_199c3a_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficiaryactivity',
            index=models.Index(fields=['activity_type', 'status'], name='activities__activit_3ef0dc_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficiaryactivity',
            index=models.Index(fields=['start_date', 'end_date'], name='activities__start_d_b5f12f_idx'),
        ),
        migrations.AddIndex(
            model_name='activitysession',
            index=models.Index(fields=['activity', 'session_date'], name='activities__activit_f9e73e_idx'),
        ),
        migrations.AddIndex(
            model_name='activitysession',
            index=models.Index(fields=['status', 'session_date'], name='activities__status_0813f3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='activitysession',
            unique_together={('activity', 'session_number')},
        ),
        migrations.AlterUniqueTogether(
            name='activityfeedback',
            unique_together={('activity',)},
        ),
        migrations.AlterUniqueTogether(
            name='activityattendance',
            unique_together={('session',)},
        ),
    ]
