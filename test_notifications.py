#!/usr/bin/env python
"""
Script para testar a funcionalidade de notifica√ß√µes
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'movemarias.settings')
django.setup()

from django.test import RequestFactory
from django.contrib.auth import get_user_model
from notifications.views import NotificationListView

def test_notifications():
    """Testar a view de notifica√ß√µes"""
    print("üîç Testando funcionalidade de notifica√ß√µes...")
    
    # Criar usu√°rio de teste
    User = get_user_model()
    admin_user = User.objects.filter(is_staff=True).first()
    
    if not admin_user:
        print("‚ùå Nenhum usu√°rio admin encontrado")
        return False
    
    print(f"‚úÖ Usu√°rio admin encontrado: {admin_user.email}")
    
    # Criar request factory
    factory = RequestFactory()
    request = factory.get('/notifications/')
    request.user = admin_user
    
    # Testar view
    try:
        view = NotificationListView.as_view()
        response = view(request)
        
        print(f"‚úÖ View executada com sucesso")
        print(f"üìä Status code: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina de notifica√ß√µes funcionando corretamente")
            return True
        else:
            print(f"‚ùå Erro na p√°gina: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao executar view: {e}")
        import traceback
        traceback.print_exc()
        return False

def check_notifications_data():
    """Verificar dados de notifica√ß√µes"""
    from notifications.models import Notification
    
    print("\nüîç Verificando dados de notifica√ß√µes...")
    
    total_notifications = Notification.objects.count()
    print(f"üìä Total de notifica√ß√µes: {total_notifications}")
    
    if total_notifications == 0:
        print("‚ÑπÔ∏è  Nenhuma notifica√ß√£o encontrada - vamos criar uma de teste")
        
        # Criar notifica√ß√£o de teste
        User = get_user_model()
        admin_user = User.objects.filter(is_staff=True).first()
        
        if admin_user:
            notification = Notification.objects.create(
                recipient=admin_user,
                title="Notifica√ß√£o de Teste",
                message="Esta √© uma notifica√ß√£o de teste para verificar a funcionalidade.",
                type="info"
            )
            print(f"‚úÖ Notifica√ß√£o de teste criada: {notification.id}")
        else:
            print("‚ùå N√£o foi poss√≠vel criar notifica√ß√£o de teste")
    else:
        print(f"‚úÖ {total_notifications} notifica√ß√µes encontradas")

if __name__ == "__main__":
    print("üöÄ Iniciando teste de notifica√ß√µes...")
    
    # Testar funcionalidade
    success = test_notifications()
    
    # Verificar dados
    check_notifications_data()
    
    if success:
        print("\n‚úÖ Teste de notifica√ß√µes conclu√≠do com sucesso!")
        print("üåê Acesse: http://127.0.0.1:8000/notifications/")
    else:
        print("\n‚ùå Teste de notifica√ß√µes falhou!")
        sys.exit(1)
