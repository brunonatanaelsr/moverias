# Generated by Django 4.2.13 on 2025-07-24 01:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("hr", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("content", models.TextField(verbose_name="Conteúdo")),
                (
                    "summary",
                    models.TextField(blank=True, max_length=500, verbose_name="Resumo"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "Geral"),
                            ("policy", "Política"),
                            ("event", "Evento"),
                            ("training", "Treinamento"),
                            ("safety", "Segurança"),
                            ("hr", "Recursos Humanos"),
                            ("technical", "Técnico"),
                            ("financial", "Financeiro"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baixa"),
                            ("medium", "Média"),
                            ("high", "Alta"),
                            ("urgent", "Urgente"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="Prioridade",
                    ),
                ),
                (
                    "is_global",
                    models.BooleanField(default=False, verbose_name="Global (Todos)"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="Fixado"),
                ),
                (
                    "requires_acknowledgment",
                    models.BooleanField(
                        default=False, verbose_name="Requer Confirmação de Leitura"
                    ),
                ),
                (
                    "publish_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Publicação",
                    ),
                ),
                (
                    "expire_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="announcements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
                (
                    "departments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="announcements",
                        to="hr.department",
                        verbose_name="Departamentos",
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="targeted_announcements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuários Específicos",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comunicado",
                "verbose_name_plural": "Comunicados",
                "ordering": ["-is_pinned", "-publish_date"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome da Campanha"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "campaign_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App"),
                            ("mixed", "Misto"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Rascunho"),
                            ("scheduled", "Agendado"),
                            ("sending", "Enviando"),
                            ("sent", "Enviado"),
                            ("completed", "Concluído"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="Assunto")),
                ("content", models.TextField(verbose_name="Conteúdo")),
                (
                    "html_content",
                    models.TextField(blank=True, verbose_name="Conteúdo HTML"),
                ),
                (
                    "segmentation_rules",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Regras de Segmentação"
                    ),
                ),
                (
                    "send_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviar em"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviado em"
                    ),
                ),
                (
                    "recipients_count",
                    models.IntegerField(
                        default=0, verbose_name="Total de Destinatários"
                    ),
                ),
                ("sent_count", models.IntegerField(default=0, verbose_name="Enviados")),
                (
                    "delivered_count",
                    models.IntegerField(default=0, verbose_name="Entregues"),
                ),
                (
                    "opened_count",
                    models.IntegerField(default=0, verbose_name="Abertos"),
                ),
                (
                    "clicked_count",
                    models.IntegerField(default=0, verbose_name="Clicados"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_campaigns",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "target_departments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="communication_campaigns",
                        to="hr.department",
                        verbose_name="Departamentos",
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="communication_campaigns",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuários Específicos",
                    ),
                ),
            ],
            options={
                "verbose_name": "Campanha de Comunicação",
                "verbose_name_plural": "Campanhas de Comunicação",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("content", models.TextField(verbose_name="Conteúdo")),
                (
                    "summary",
                    models.CharField(blank=True, max_length=500, verbose_name="Resumo"),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("announcement", "Comunicado"),
                            ("memo", "Memorando"),
                            ("newsletter", "Newsletter"),
                            ("notification", "Notificação"),
                            ("alert", "Alerta"),
                        ],
                        default="announcement",
                        max_length=50,
                        verbose_name="Tipo de Mensagem",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baixa"),
                            ("medium", "Média"),
                            ("high", "Alta"),
                            ("urgent", "Urgente"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="Prioridade",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Rascunho"),
                            ("scheduled", "Agendado"),
                            ("published", "Publicado"),
                            ("archived", "Arquivado"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "Geral"),
                            ("policy", "Política"),
                            ("event", "Evento"),
                            ("training", "Treinamento"),
                            ("safety", "Segurança"),
                            ("hr", "Recursos Humanos"),
                            ("technical", "Técnico"),
                            ("financial", "Financeiro"),
                            ("social", "Social"),
                        ],
                        default="general",
                        max_length=50,
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "tags",
                    models.CharField(blank=True, max_length=200, verbose_name="Tags"),
                ),
                (
                    "requires_response",
                    models.BooleanField(default=False, verbose_name="Requer Resposta"),
                ),
                (
                    "allow_responses",
                    models.BooleanField(default=True, verbose_name="Permite Respostas"),
                ),
                (
                    "response_deadline",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Prazo para Resposta"
                    ),
                ),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="Fixado"),
                ),
                (
                    "publish_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Publicação"
                    ),
                ),
                (
                    "expire_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "view_count",
                    models.IntegerField(default=0, verbose_name="Visualizações"),
                ),
                (
                    "response_count",
                    models.IntegerField(default=0, verbose_name="Respostas"),
                ),
                (
                    "engagement_score",
                    models.FloatField(default=0.0, verbose_name="Score de Engajamento"),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Metadados"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authored_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mensagem de Comunicação",
                "verbose_name_plural": "Mensagens de Comunicação",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InternalMemo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "memo_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número do Memorando"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("content", models.TextField(verbose_name="Conteúdo")),
                (
                    "memo_type",
                    models.CharField(
                        choices=[
                            ("informative", "Informativo"),
                            ("directive", "Diretivo"),
                            ("request", "Solicitação"),
                            ("policy", "Política"),
                            ("procedure", "Procedimento"),
                        ],
                        default="informative",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "requires_response",
                    models.BooleanField(default=False, verbose_name="Requer Resposta"),
                ),
                (
                    "response_deadline",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Prazo de Resposta"
                    ),
                ),
                (
                    "is_confidential",
                    models.BooleanField(default=False, verbose_name="Confidencial"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "from_department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_memos",
                        to="hr.department",
                        verbose_name="Departamento Origem",
                    ),
                ),
                (
                    "from_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_memos",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="De",
                    ),
                ),
                (
                    "to_departments",
                    models.ManyToManyField(
                        blank=True,
                        related_name="received_memos",
                        to="hr.department",
                        verbose_name="Para Departamentos",
                    ),
                ),
                (
                    "to_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="received_memos",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Para Usuários",
                    ),
                ),
            ],
            options={
                "verbose_name": "Memorando",
                "verbose_name_plural": "Memorandos",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SuggestionBox",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descrição")),
                (
                    "suggestion_type",
                    models.CharField(
                        choices=[
                            ("improvement", "Melhoria"),
                            ("complaint", "Reclamação"),
                            ("idea", "Ideia"),
                            ("feedback", "Feedback"),
                            ("other", "Outro"),
                        ],
                        default="improvement",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=False, verbose_name="Anônimo"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Aberto"),
                            ("under_review", "Em Análise"),
                            ("in_progress", "Em Andamento"),
                            ("implemented", "Implementado"),
                            ("rejected", "Rejeitado"),
                            ("closed", "Fechado"),
                        ],
                        default="open",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("response", models.TextField(blank=True, verbose_name="Resposta")),
                (
                    "responded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Respondido em"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_suggestions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atribuído a",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="suggestions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="suggestions",
                        to="hr.department",
                        verbose_name="Departamento",
                    ),
                ),
                (
                    "responded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="responded_suggestions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Respondido por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sugestão",
                "verbose_name_plural": "Sugestões",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("content", models.TextField(verbose_name="Conteúdo")),
                (
                    "summary",
                    models.TextField(blank=True, max_length=500, verbose_name="Resumo"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Publicado"),
                ),
                (
                    "publish_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de Publicação"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="newsletters",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Newsletter",
                "verbose_name_plural": "Newsletters",
                "ordering": ["-publish_date"],
            },
        ),
        migrations.CreateModel(
            name="MessageAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="communication/attachments/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                ]
                            )
                        ],
                        verbose_name="Arquivo",
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Nome Original"
                    ),
                ),
                (
                    "file_size",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Tamanho do Arquivo"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Tipo de Conteúdo"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Descrição"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="Público"),
                ),
                (
                    "download_count",
                    models.IntegerField(default=0, verbose_name="Downloads"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="communication.communicationmessage",
                        verbose_name="Mensagem",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Enviado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anexo da Mensagem",
                "verbose_name_plural": "Anexos das Mensagens",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MemoResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Resposta")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "memo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="communication.internalmemo",
                        verbose_name="Memorando",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memo_responses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resposta ao Memorando",
                "verbose_name_plural": "Respostas aos Memorandos",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome do Template"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("announcement", "Comunicado"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Template do Assunto"
                    ),
                ),
                (
                    "content_template",
                    models.TextField(verbose_name="Template do Conteúdo"),
                ),
                (
                    "html_template",
                    models.TextField(blank=True, verbose_name="Template HTML"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Padrão"),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Variáveis Disponíveis"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_communication_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de Comunicação",
                "verbose_name_plural": "Templates de Comunicação",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_announcements",
                    models.BooleanField(
                        default=True, verbose_name="Comunicados por Email"
                    ),
                ),
                (
                    "email_memos",
                    models.BooleanField(
                        default=True, verbose_name="Memorandos por Email"
                    ),
                ),
                (
                    "email_newsletters",
                    models.BooleanField(
                        default=False, verbose_name="Newsletters por Email"
                    ),
                ),
                (
                    "digest_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Diário"),
                            ("weekly", "Semanal"),
                            ("monthly", "Mensal"),
                            ("never", "Nunca"),
                        ],
                        default="weekly",
                        max_length=10,
                        verbose_name="Frequência do Resumo",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_settings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configurações de Comunicação",
                "verbose_name_plural": "Configurações de Comunicação",
            },
        ),
        migrations.CreateModel(
            name="CommunicationSegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome do Segmento"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "filter_rules",
                    models.JSONField(default=dict, verbose_name="Regras de Filtro"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "auto_update",
                    models.BooleanField(
                        default=True, verbose_name="Atualização Automática"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_segments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="communication_segments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuários",
                    ),
                ),
            ],
            options={
                "verbose_name": "Segmento de Audiência",
                "verbose_name_plural": "Segmentos de Audiência",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_enabled",
                    models.BooleanField(default=True, verbose_name="Email"),
                ),
                ("sms_enabled", models.BooleanField(default=True, verbose_name="SMS")),
                (
                    "push_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Push Notifications"
                    ),
                ),
                (
                    "in_app_enabled",
                    models.BooleanField(default=True, verbose_name="In-App"),
                ),
                (
                    "announcements_enabled",
                    models.BooleanField(default=True, verbose_name="Comunicados"),
                ),
                (
                    "newsletters_enabled",
                    models.BooleanField(default=True, verbose_name="Newsletters"),
                ),
                (
                    "events_enabled",
                    models.BooleanField(default=True, verbose_name="Eventos"),
                ),
                (
                    "reminders_enabled",
                    models.BooleanField(default=True, verbose_name="Lembretes"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Imediato"),
                            ("daily", "Diário"),
                            ("weekly", "Semanal"),
                            ("monthly", "Mensal"),
                        ],
                        default="immediate",
                        max_length=20,
                        verbose_name="Frequência",
                    ),
                ),
                (
                    "preferred_time_start",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Horário Preferido - Início"
                    ),
                ),
                (
                    "preferred_time_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Horário Preferido - Fim"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="America/Sao_Paulo",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_preferences_legacy",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferência de Comunicação",
                "verbose_name_plural": "Preferências de Comunicação",
            },
        ),
        migrations.CreateModel(
            name="CommunicationEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("sent", "Enviado"),
                            ("delivered", "Entregue"),
                            ("opened", "Aberto"),
                            ("clicked", "Clicado"),
                            ("bounced", "Rejeitado"),
                            ("unsubscribed", "Descadastrado"),
                            ("failed", "Falhou"),
                        ],
                        max_length=20,
                        verbose_name="Tipo do Evento",
                    ),
                ),
                (
                    "event_data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Dados do Evento"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="communication.communicationcampaign",
                        verbose_name="Campanha",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento de Comunicação",
                "verbose_name_plural": "Eventos de Comunicação",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome do Canal"),
                ),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("whatsapp", "WhatsApp"),
                            ("slack", "Slack"),
                            ("telegram", "Telegram"),
                            ("webhook", "Webhook"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(default=dict, verbose_name="Configuração"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "daily_limit",
                    models.IntegerField(default=1000, verbose_name="Limite Diário"),
                ),
                (
                    "hourly_limit",
                    models.IntegerField(default=100, verbose_name="Limite por Hora"),
                ),
                (
                    "total_sent",
                    models.IntegerField(default=0, verbose_name="Total Enviado"),
                ),
                (
                    "total_delivered",
                    models.IntegerField(default=0, verbose_name="Total Entregue"),
                ),
                (
                    "total_failed",
                    models.IntegerField(default=0, verbose_name="Total Falhou"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_communication_channels",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Canal de Comunicação",
                "verbose_name_plural": "Canais de Comunicação",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationAnalyticsRefactored",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_name",
                    models.CharField(max_length=100, verbose_name="Nome da Métrica"),
                ),
                ("metric_value", models.JSONField(verbose_name="Valor da Métrica")),
                (
                    "period_start",
                    models.DateTimeField(verbose_name="Início do Período"),
                ),
                ("period_end", models.DateTimeField(verbose_name="Fim do Período")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_refactored",
                        to="communication.communicationmessage",
                        verbose_name="Mensagem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_analytics_refactored",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analítica de Comunicação Refatorada",
                "verbose_name_plural": "Analíticas de Comunicação Refatoradas",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(blank=True, null=True, verbose_name="Data")),
                ("sent_count", models.IntegerField(default=0, verbose_name="Enviados")),
                (
                    "delivered_count",
                    models.IntegerField(default=0, verbose_name="Entregues"),
                ),
                (
                    "opened_count",
                    models.IntegerField(default=0, verbose_name="Abertos"),
                ),
                (
                    "clicked_count",
                    models.IntegerField(default=0, verbose_name="Clicados"),
                ),
                (
                    "bounced_count",
                    models.IntegerField(default=0, verbose_name="Rejeitados"),
                ),
                (
                    "unsubscribed_count",
                    models.IntegerField(default=0, verbose_name="Descadastrados"),
                ),
                (
                    "unique_opens",
                    models.IntegerField(default=0, verbose_name="Aberturas Únicas"),
                ),
                (
                    "unique_clicks",
                    models.IntegerField(default=0, verbose_name="Cliques Únicos"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="communication.communicationcampaign",
                        verbose_name="Campanha",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics de Comunicação",
                "verbose_name_plural": "Analytics de Comunicação",
            },
        ),
        migrations.CreateModel(
            name="AnnouncementReadReceipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Lido em"),
                ),
                (
                    "acknowledged",
                    models.BooleanField(default=False, verbose_name="Confirmado"),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Confirmado em"
                    ),
                ),
                (
                    "announcement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_receipts",
                        to="communication.announcement",
                        verbose_name="Comunicado",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="announcement_reads",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Confirmação de Leitura",
                "verbose_name_plural": "Confirmações de Leitura",
            },
        ),
        migrations.CreateModel(
            name="AnnouncementAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="communication/attachments/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "zip",
                                    "rar",
                                ]
                            )
                        ],
                        verbose_name="Arquivo",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Nome")),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Enviado em"),
                ),
                (
                    "announcement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="communication.announcement",
                        verbose_name="Comunicado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anexo",
                "verbose_name_plural": "Anexos",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Conteúdo da Resposta")),
                (
                    "response_type",
                    models.CharField(
                        choices=[
                            ("reply", "Resposta"),
                            ("acknowledgment", "Confirmação"),
                            ("question", "Pergunta"),
                            ("feedback", "Feedback"),
                        ],
                        default="reply",
                        max_length=20,
                        verbose_name="Tipo de Resposta",
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(default=False, verbose_name="Resposta Privada"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="communication.communicationmessage",
                        verbose_name="Mensagem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_responses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resposta à Mensagem",
                "verbose_name_plural": "Respostas às Mensagens",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["message", "created_at"],
                        name="communicati_message_b3745b_idx",
                    ),
                    models.Index(
                        fields=["user", "response_type"],
                        name="communicati_user_id_5a6c49_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MessageRecipient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Lida")),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Lida em"),
                ),
                (
                    "is_archived",
                    models.BooleanField(default=False, verbose_name="Arquivada"),
                ),
                (
                    "archived_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Arquivada em"
                    ),
                ),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("delivered", "Entregue"),
                            ("failed", "Falhou"),
                            ("bounced", "Rejeitada"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status de Entrega",
                    ),
                ),
                (
                    "delivery_attempted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tentativa de Entrega"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipients",
                        to="communication.communicationmessage",
                        verbose_name="Mensagem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Destinatário da Mensagem",
                "verbose_name_plural": "Destinatários da Mensagem",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_read"],
                        name="communicati_user_id_d50c8a_idx",
                    ),
                    models.Index(
                        fields=["message", "delivery_status"],
                        name="communicati_message_46c438_idx",
                    ),
                ],
                "unique_together": {("message", "user")},
            },
        ),
        migrations.CreateModel(
            name="CommunicationPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notificações por Email"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(default=True, verbose_name="Notificações Push"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="Notificações SMS"),
                ),
                (
                    "notification_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Imediata"),
                            ("daily", "Diária"),
                            ("weekly", "Semanal"),
                            ("none", "Nenhuma"),
                        ],
                        default="immediate",
                        max_length=20,
                        verbose_name="Frequência de Notificação",
                    ),
                ),
                (
                    "message_types",
                    models.JSONField(default=list, verbose_name="Tipos de Mensagem"),
                ),
                (
                    "categories",
                    models.JSONField(default=list, verbose_name="Categorias"),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True,
                        null=True,
                        verbose_name="Início do Horário Silencioso",
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fim do Horário Silencioso"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("pt", "Português"),
                            ("en", "English"),
                            ("es", "Español"),
                        ],
                        default="pt",
                        max_length=5,
                        verbose_name="Idioma",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="America/Sao_Paulo",
                        max_length=50,
                        verbose_name="Fuso Horário",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communication_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferências de Comunicação",
                "verbose_name_plural": "Preferências de Comunicação",
                "unique_together": {("user",)},
            },
        ),
        migrations.AddIndex(
            model_name="communicationmessage",
            index=models.Index(
                fields=["status", "publish_date"], name="communicati_status_01a21a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communicationmessage",
            index=models.Index(
                fields=["author", "created_at"], name="communicati_author__389cbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="communicationmessage",
            index=models.Index(
                fields=["message_type", "category"],
                name="communicati_message_a1b8a4_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="announcementreadreceipt",
            unique_together={("announcement", "user")},
        ),
    ]
