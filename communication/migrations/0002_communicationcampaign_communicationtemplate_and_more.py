# Generated by Django 4.2.13 on 2025-07-12 17:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0002_advancedtraining_onboardingprogram_onboardingtask_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('communication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunicationCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome da Campanha')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('campaign_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App'), ('mixed', 'Misto')], max_length=20, verbose_name='Tipo')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('scheduled', 'Agendado'), ('sending', 'Enviando'), ('sent', 'Enviado'), ('completed', 'Concluído'), ('cancelled', 'Cancelado')], default='draft', max_length=20, verbose_name='Status')),
                ('subject', models.CharField(max_length=200, verbose_name='Assunto')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('html_content', models.TextField(blank=True, verbose_name='Conteúdo HTML')),
                ('segmentation_rules', models.JSONField(blank=True, default=dict, verbose_name='Regras de Segmentação')),
                ('send_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviar em')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviado em')),
                ('recipients_count', models.IntegerField(default=0, verbose_name='Total de Destinatários')),
                ('sent_count', models.IntegerField(default=0, verbose_name='Enviados')),
                ('delivered_count', models.IntegerField(default=0, verbose_name='Entregues')),
                ('opened_count', models.IntegerField(default=0, verbose_name='Abertos')),
                ('clicked_count', models.IntegerField(default=0, verbose_name='Clicados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('target_departments', models.ManyToManyField(blank=True, related_name='communication_campaigns', to='hr.department', verbose_name='Departamentos')),
                ('target_users', models.ManyToManyField(blank=True, related_name='communication_campaigns', to=settings.AUTH_USER_MODEL, verbose_name='Usuários Específicos')),
            ],
            options={
                'verbose_name': 'Campanha de Comunicação',
                'verbose_name_plural': 'Campanhas de Comunicação',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Template')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('announcement', 'Comunicado')], max_length=20, verbose_name='Tipo')),
                ('subject_template', models.CharField(blank=True, max_length=200, verbose_name='Template do Assunto')),
                ('content_template', models.TextField(verbose_name='Template do Conteúdo')),
                ('html_template', models.TextField(blank=True, verbose_name='Template HTML')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_default', models.BooleanField(default=False, verbose_name='Padrão')),
                ('available_variables', models.JSONField(blank=True, default=dict, verbose_name='Variáveis Disponíveis')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_communication_templates', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Template de Comunicação',
                'verbose_name_plural': 'Templates de Comunicação',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Segmento')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('filter_rules', models.JSONField(default=dict, verbose_name='Regras de Filtro')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('auto_update', models.BooleanField(default=True, verbose_name='Atualização Automática')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_segments', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('users', models.ManyToManyField(blank=True, related_name='communication_segments', to=settings.AUTH_USER_MODEL, verbose_name='Usuários')),
            ],
            options={
                'verbose_name': 'Segmento de Audiência',
                'verbose_name_plural': 'Segmentos de Audiência',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Email')),
                ('sms_enabled', models.BooleanField(default=True, verbose_name='SMS')),
                ('push_enabled', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='In-App')),
                ('announcements_enabled', models.BooleanField(default=True, verbose_name='Comunicados')),
                ('newsletters_enabled', models.BooleanField(default=True, verbose_name='Newsletters')),
                ('events_enabled', models.BooleanField(default=True, verbose_name='Eventos')),
                ('reminders_enabled', models.BooleanField(default=True, verbose_name='Lembretes')),
                ('frequency', models.CharField(choices=[('immediate', 'Imediato'), ('daily', 'Diário'), ('weekly', 'Semanal'), ('monthly', 'Mensal')], default='immediate', max_length=20, verbose_name='Frequência')),
                ('preferred_time_start', models.TimeField(blank=True, null=True, verbose_name='Horário Preferido - Início')),
                ('preferred_time_end', models.TimeField(blank=True, null=True, verbose_name='Horário Preferido - Fim')),
                ('timezone', models.CharField(default='America/Sao_Paulo', max_length=50, verbose_name='Timezone')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='communication_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Preferência de Comunicação',
                'verbose_name_plural': 'Preferências de Comunicação',
            },
        ),
        migrations.CreateModel(
            name='CommunicationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('sent', 'Enviado'), ('delivered', 'Entregue'), ('opened', 'Aberto'), ('clicked', 'Clicado'), ('bounced', 'Rejeitado'), ('unsubscribed', 'Descadastrado'), ('failed', 'Falhou')], max_length=20, verbose_name='Tipo do Evento')),
                ('event_data', models.JSONField(blank=True, default=dict, verbose_name='Dados do Evento')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='communication.communicationcampaign', verbose_name='Campanha')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication_events', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Evento de Comunicação',
                'verbose_name_plural': 'Eventos de Comunicação',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Canal')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('slack', 'Slack'), ('telegram', 'Telegram'), ('webhook', 'Webhook')], max_length=20, verbose_name='Tipo')),
                ('configuration', models.JSONField(default=dict, verbose_name='Configuração')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('daily_limit', models.IntegerField(default=1000, verbose_name='Limite Diário')),
                ('hourly_limit', models.IntegerField(default=100, verbose_name='Limite por Hora')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Total Enviado')),
                ('total_delivered', models.IntegerField(default=0, verbose_name='Total Entregue')),
                ('total_failed', models.IntegerField(default=0, verbose_name='Total Falhou')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_communication_channels', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Canal de Comunicação',
                'verbose_name_plural': 'Canais de Comunicação',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data')),
                ('sent_count', models.IntegerField(default=0, verbose_name='Enviados')),
                ('delivered_count', models.IntegerField(default=0, verbose_name='Entregues')),
                ('opened_count', models.IntegerField(default=0, verbose_name='Abertos')),
                ('clicked_count', models.IntegerField(default=0, verbose_name='Clicados')),
                ('bounced_count', models.IntegerField(default=0, verbose_name='Rejeitados')),
                ('unsubscribed_count', models.IntegerField(default=0, verbose_name='Descadastrados')),
                ('unique_opens', models.IntegerField(default=0, verbose_name='Aberturas Únicas')),
                ('unique_clicks', models.IntegerField(default=0, verbose_name='Cliques Únicos')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='communication.communicationcampaign', verbose_name='Campanha')),
            ],
            options={
                'verbose_name': 'Analytics de Comunicação',
                'verbose_name_plural': 'Analytics de Comunicação',
                'unique_together': {('campaign', 'date')},
            },
        ),
    ]
