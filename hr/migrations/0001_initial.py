# Generated by Django 4.2.13 on 2025-07-11 18:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Departamento')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(max_length=20, unique=True, verbose_name='Número de Matrícula')),
                ('full_name', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato 000.000.000-00', regex='\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}')], verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, verbose_name='RG')),
                ('birth_date', models.DateField(verbose_name='Data de Nascimento')),
                ('gender', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=1, verbose_name='Gênero')),
                ('marital_status', models.CharField(choices=[('single', 'Solteiro(a)'), ('married', 'Casado(a)'), ('divorced', 'Divorciado(a)'), ('widowed', 'Viúvo(a)'), ('union', 'União Estável')], max_length=20, verbose_name='Estado Civil')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('personal_email', models.EmailField(blank=True, max_length=254, verbose_name='Email Pessoal')),
                ('address', models.TextField(verbose_name='Endereço Completo')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('zip_code', models.CharField(max_length=10, verbose_name='CEP')),
                ('emergency_contact_name', models.CharField(max_length=200, verbose_name='Nome do Contato de Emergência')),
                ('emergency_contact_relationship', models.CharField(max_length=50, verbose_name='Parentesco')),
                ('emergency_contact_phone', models.CharField(max_length=20, verbose_name='Telefone de Emergência')),
                ('employment_type', models.CharField(choices=[('clt', 'CLT'), ('pj', 'Pessoa Jurídica'), ('volunteer', 'Voluntário'), ('intern', 'Estagiário'), ('temporary', 'Temporário')], max_length=20, verbose_name='Tipo de Vínculo')),
                ('employment_status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('vacation', 'Em Férias'), ('medical_leave', 'Afastamento Médico'), ('maternity_leave', 'Licença Maternidade'), ('terminated', 'Desligado')], default='active', max_length=20, verbose_name='Status')),
                ('hire_date', models.DateField(verbose_name='Data de Admissão')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Data de Desligamento')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Salário')),
                ('pis_pasep', models.CharField(blank=True, max_length=20, verbose_name='PIS/PASEP')),
                ('work_permit', models.CharField(blank=True, max_length=20, verbose_name='Carteira de Trabalho')),
                ('has_health_insurance', models.BooleanField(default=False, verbose_name='Possui Plano de Saúde')),
                ('has_dental_insurance', models.BooleanField(default=False, verbose_name='Possui Plano Odontológico')),
                ('has_life_insurance', models.BooleanField(default=False, verbose_name='Possui Seguro de Vida')),
                ('education_level', models.CharField(blank=True, max_length=100, verbose_name='Escolaridade')),
                ('skills', models.TextField(blank=True, verbose_name='Habilidades e Competências')),
                ('certifications', models.TextField(blank=True, verbose_name='Certificações')),
                ('languages', models.TextField(blank=True, verbose_name='Idiomas')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_employees', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='hr.department', verbose_name='Departamento')),
                ('direct_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='hr.employee', verbose_name='Supervisor Direto')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=200, verbose_name='Nome do Treinamento')),
                ('training_type', models.CharField(choices=[('internal', 'Treinamento Interno'), ('external', 'Treinamento Externo'), ('online', 'Curso Online'), ('conference', 'Conferência/Seminário'), ('workshop', 'Workshop'), ('certification', 'Certificação')], max_length=20, verbose_name='Tipo')),
                ('provider', models.CharField(blank=True, max_length=200, verbose_name='Provedor/Instituição')),
                ('start_date', models.DateField(verbose_name='Data de Início')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('hours', models.IntegerField(blank=True, null=True, verbose_name='Carga Horária')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo')),
                ('status', models.CharField(choices=[('planned', 'Planejado'), ('in_progress', 'Em Andamento'), ('completed', 'Concluído'), ('cancelled', 'Cancelado')], default='planned', max_length=20, verbose_name='Status')),
                ('certificate_obtained', models.BooleanField(default=False, verbose_name='Certificado Obtido')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to='hr.employee', verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Registro de Treinamento',
                'verbose_name_plural': 'Registros de Treinamentos',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('annual', 'Anual'), ('probation', 'Período de Experiência'), ('promotion', 'Promoção'), ('disciplinary', 'Disciplinar'), ('project', 'Por Projeto')], max_length=20, verbose_name='Tipo de Avaliação')),
                ('review_period_start', models.DateField(verbose_name='Início do Período')),
                ('review_period_end', models.DateField(verbose_name='Fim do Período')),
                ('technical_skills', models.IntegerField(choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], verbose_name='Habilidades Técnicas')),
                ('communication', models.IntegerField(choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], verbose_name='Comunicação')),
                ('teamwork', models.IntegerField(choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], verbose_name='Trabalho em Equipe')),
                ('leadership', models.IntegerField(blank=True, choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], null=True, verbose_name='Liderança')),
                ('punctuality', models.IntegerField(choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], verbose_name='Pontualidade')),
                ('productivity', models.IntegerField(choices=[(1, 'Insatisfatório'), (2, 'Abaixo da Expectativa'), (3, 'Atende Expectativa'), (4, 'Supera Expectativa'), (5, 'Excepcional')], verbose_name='Produtividade')),
                ('strengths', models.TextField(blank=True, verbose_name='Pontos Fortes')),
                ('areas_for_improvement', models.TextField(blank=True, verbose_name='Áreas para Melhoria')),
                ('goals_for_next_period', models.TextField(blank=True, verbose_name='Metas para Próximo Período')),
                ('employee_comments', models.TextField(blank=True, verbose_name='Comentários do Funcionário')),
                ('review_date', models.DateField(verbose_name='Data da Avaliação')),
                ('is_final', models.BooleanField(default=False, verbose_name='Avaliação Finalizada')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='hr.employee', verbose_name='Funcionário')),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Avaliado por')),
            ],
            options={
                'verbose_name': 'Avaliação de Desempenho',
                'verbose_name_plural': 'Avaliações de Desempenho',
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='JobPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Título do Cargo')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('requirements', models.TextField(blank=True, verbose_name='Requisitos')),
                ('responsibilities', models.TextField(blank=True, verbose_name='Responsabilidades')),
                ('salary_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salário Mínimo')),
                ('salary_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salário Máximo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='hr.department', verbose_name='Departamento')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('contract', 'Contrato de Trabalho'), ('resume', 'Currículo'), ('id_copy', 'Cópia de Documento'), ('diploma', 'Diploma'), ('certificate', 'Certificado'), ('medical', 'Atestado Médico'), ('other', 'Outro')], max_length=20, verbose_name='Tipo de Documento')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('file', models.FileField(upload_to='hr/documents/%Y/%m/', verbose_name='Arquivo')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='Confidencial')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='hr.employee', verbose_name='Funcionário')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Enviado por')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='job_position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='hr.jobposition', verbose_name='Cargo'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Sistema'),
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to='hr.employee', verbose_name='Responsável'),
        ),
    ]
