# Generated by Django 4.2.13 on 2025-07-24 01:00

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("members", "0001_initial"),
        ("workshops", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=300, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descrição")),
                ("completion_date", models.DateField(verbose_name="Data de Conclusão")),
                (
                    "issue_date",
                    models.DateField(auto_now_add=True, verbose_name="Data de Emissão"),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Expiração"
                    ),
                ),
                (
                    "hours_completed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Horas Completadas"
                    ),
                ),
                (
                    "grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Nota",
                    ),
                ),
                (
                    "instructor",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Instrutor"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("generated", "Gerado"),
                            ("delivered", "Entregue"),
                            ("expired", "Expirado"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certificates/generated/",
                        verbose_name="Arquivo PDF",
                    ),
                ),
                (
                    "verification_code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        unique=True,
                        verbose_name="Código de Verificação",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificates",
                        to="members.beneficiary",
                        verbose_name="Beneficiária",
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificado",
                "verbose_name_plural": "Certificados",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CertificateTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome do Template"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("workshop", "Workshop"),
                            ("course", "Curso"),
                            ("participation", "Participação"),
                            ("completion", "Conclusão"),
                            ("achievement", "Conquista"),
                            ("declaration", "Declaração de Comparecimento"),
                            ("benefit_receipt", "Recibo de Benefício"),
                        ],
                        default="workshop",
                        max_length=20,
                    ),
                ),
                (
                    "template_file",
                    models.FileField(
                        help_text="Template HTML para o certificado",
                        upload_to="certificates/templates/",
                        verbose_name="Arquivo do Template",
                    ),
                ),
                (
                    "background_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="certificates/backgrounds/",
                        verbose_name="Imagem de Fundo",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="certificates/logos/",
                        verbose_name="Logo",
                    ),
                ),
                (
                    "signature_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="certificates/signatures/",
                        verbose_name="Assinatura",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Template de Certificado",
                "verbose_name_plural": "Templates de Certificado",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CertificateDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("download", "Download"),
                            ("print", "Impressão"),
                            ("postal", "Correio"),
                        ],
                        max_length=20,
                        verbose_name="Método de Entrega",
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Entrega"
                    ),
                ),
                (
                    "recipient_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email do Destinatário"
                    ),
                ),
                (
                    "tracking_code",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Código de Rastreamento",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observações")),
                (
                    "certificate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="certificates.certificate",
                        verbose_name="Certificado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entrega de Certificado",
                "verbose_name_plural": "Entregas de Certificado",
                "ordering": ["-delivered_at"],
            },
        ),
        migrations.AddField(
            model_name="certificate",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="certificates",
                to="certificates.certificatetemplate",
                verbose_name="Template",
            ),
        ),
        migrations.AddField(
            model_name="certificate",
            name="workshop",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="certificates",
                to="workshops.workshop",
                verbose_name="Workshop",
            ),
        ),
        migrations.CreateModel(
            name="CertificateRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "requested_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Solicitação"
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data do Processamento"
                    ),
                ),
                (
                    "approved",
                    models.BooleanField(default=False, verbose_name="Aprovado"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observações")),
                (
                    "certificate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="certificates.certificate",
                        verbose_name="Certificado",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate_requests",
                        to="members.beneficiary",
                        verbose_name="Beneficiária",
                    ),
                ),
                (
                    "workshop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate_requests",
                        to="workshops.workshop",
                        verbose_name="Workshop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solicitação de Certificado",
                "verbose_name_plural": "Solicitações de Certificado",
                "ordering": ["-requested_at"],
                "unique_together": {("member", "workshop")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="certificate",
            unique_together={("member", "workshop", "template")},
        ),
    ]
